#file_out = "yellow_tripdata_2019-01_out.csv"
#df02=df
#df01=df
df <- read_csv(file_in,
col_types = cols(RatecodeID = col_skip(),
VendorID = col_skip(),
store_and_fwd_flag = col_skip(),
congestion_surcharge = col_skip(),
tpep_dropoff_datetime = col_datetime(format = "%Y-%m-%d %H:%M:%S"),
tpep_pickup_datetime = col_datetime(format = "%Y-%m-%d %H:%M:%S")))
df %>% filter(payment_type==1 | payment_type==2 )  -> df
#object_size(df)
df$year=year(df$tpep_pickup_datetime)
df$month=month(df$tpep_pickup_datetime)
df$wday=wday(df$tpep_pickup_datetime)
df$hr=hour(df$tpep_pickup_datetime)
df$duration=difftime(df$tpep_dropoff_datetime,df$tpep_pickup_datetime,units='mins')
df$duration=as.numeric(df$duration)
df$tpep_dropoff_datetime = NULL
df$tpep_pickup_datetime = NULL
df$trips=1
df=df[df$duration>0,]
df=df[df$trip_distance>0,]
df=df[df$duration<150,]
#df = df[df$year==2019,]
#nrow(df)
#df = df[df$month<7,]
#nrow(df)
df = df[df$fare_amount>0,]
nrow(df)
df$range_hrs = ifelse(df$hr>=0 & df$hr<4,'00-04',ifelse(df$hr>=4 & df$hr<8,'04-08',ifelse(df$hr>=8 & df$hr<12,'08-12',ifelse(df$hr>=12 & df$hr<16,'12-16',ifelse(df$hr>=16 & df$hr<20,'16-20','20-24')))))
df$passenger_count=ifelse(df$passenger_count==0,1,df$passenger_count)
df$hr=NULL
df %>%
dplyr::rename(LocationID=PULocationID) %>%
left_join(df_locations,by = "LocationID") %>%
dplyr::rename(O_borough=Borough,O_Zone=Zone) %>%
select(-LocationID) %>%
dplyr::rename(LocationID=DOLocationID) %>%
left_join(df_locations,by = "LocationID") %>%
dplyr::rename(D_borough=Borough,D_Zone=Zone) %>%
select(-LocationID) -> df
#fwrite(df,file_out)
df %>% group_by(year,month,O_borough,O_Zone,D_borough,D_Zone,payment_type,wday,range_hrs) %>%
summarize(passengers=sum(passenger_count),distance=sum(trip_distance),amount_fare=sum(fare_amount),amount_extra=sum(extra),amount_mta=sum(mta_tax),amount_tip=sum(tip_amount),amount_tolls=sum(tolls_amount),amount_improvement=sum(improvement_surcharge),amount_total=sum(total_amount),duration=sum(duration),trips=sum(trips)) -> df
#df=rbind(df01,df02,df03,df04,df05,df06)
#fwrite(df,"trips_2019_01_to_06.csv")
#unique(df$month)
#nrow(df)
#nrow(df[df$year==2019,])
#nrow(df)
#df_small=df[sample(1:nrow(df),size = 10000,replace=F),]
#object_size(df)
#library(readr)
#library(data.table)
#library(pryr)
#library(dplyr)
#library(lubridate)
#https://www1.nyc.gov/site/tlc/about/tlc-trip-record-data.page
setwd("/Users/mavt/Dropbox/School/NYCDataScience/Projects/Shiny/taxis/")
getwd()
#file_in = "yellow_tripdata_2019-06.csv"
#file_out = "yellow_tripdata_2019-06_out.csv"
#df_locations <- fread("taxi+_zone_lookup.csv")
#df_locations$service_zone=NULL
file_in = "yellow_tripdata_2019-05.csv"
file_out = "yellow_tripdata_2019-05_out.csv"
df06=df
#file_in = "yellow_tripdata_2019-04.csv"
#file_out = "yellow_tripdata_2019-04_out.csv"
#df05=df
#file_in = "yellow_tripdata_2019-03.csv"
#file_out = "yellow_tripdata_2019-03_out.csv"
#df04=df
#file_in = "yellow_tripdata_2019-02.csv"
#file_out = "yellow_tripdata_2019-02_out.csv"
#df03=df
#file_in = "yellow_tripdata_2019-01.csv"
#file_out = "yellow_tripdata_2019-01_out.csv"
#df02=df
#df01=df
df <- read_csv(file_in,
col_types = cols(RatecodeID = col_skip(),
VendorID = col_skip(),
store_and_fwd_flag = col_skip(),
congestion_surcharge = col_skip(),
tpep_dropoff_datetime = col_datetime(format = "%Y-%m-%d %H:%M:%S"),
tpep_pickup_datetime = col_datetime(format = "%Y-%m-%d %H:%M:%S")))
df %>% filter(payment_type==1 | payment_type==2 )  -> df
#object_size(df)
df$year=year(df$tpep_pickup_datetime)
df$month=month(df$tpep_pickup_datetime)
df$wday=wday(df$tpep_pickup_datetime)
df$hr=hour(df$tpep_pickup_datetime)
df$duration=difftime(df$tpep_dropoff_datetime,df$tpep_pickup_datetime,units='mins')
df$duration=as.numeric(df$duration)
df$tpep_dropoff_datetime = NULL
df$tpep_pickup_datetime = NULL
df$trips=1
df=df[df$duration>0,]
df=df[df$trip_distance>0,]
df=df[df$duration<150,]
#df = df[df$year==2019,]
#nrow(df)
#df = df[df$month<7,]
#nrow(df)
df = df[df$fare_amount>0,]
nrow(df)
df$range_hrs = ifelse(df$hr>=0 & df$hr<4,'00-04',ifelse(df$hr>=4 & df$hr<8,'04-08',ifelse(df$hr>=8 & df$hr<12,'08-12',ifelse(df$hr>=12 & df$hr<16,'12-16',ifelse(df$hr>=16 & df$hr<20,'16-20','20-24')))))
df$passenger_count=ifelse(df$passenger_count==0,1,df$passenger_count)
df$hr=NULL
df %>%
dplyr::rename(LocationID=PULocationID) %>%
left_join(df_locations,by = "LocationID") %>%
dplyr::rename(O_borough=Borough,O_Zone=Zone) %>%
select(-LocationID) %>%
dplyr::rename(LocationID=DOLocationID) %>%
left_join(df_locations,by = "LocationID") %>%
dplyr::rename(D_borough=Borough,D_Zone=Zone) %>%
select(-LocationID) -> df
#fwrite(df,file_out)
df %>% group_by(year,month,O_borough,O_Zone,D_borough,D_Zone,payment_type,wday,range_hrs) %>%
summarize(passengers=sum(passenger_count),distance=sum(trip_distance),amount_fare=sum(fare_amount),amount_extra=sum(extra),amount_mta=sum(mta_tax),amount_tip=sum(tip_amount),amount_tolls=sum(tolls_amount),amount_improvement=sum(improvement_surcharge),amount_total=sum(total_amount),duration=sum(duration),trips=sum(trips)) -> df
#df=rbind(df01,df02,df03,df04,df05,df06)
#fwrite(df,"trips_2019_01_to_06.csv")
#unique(df$month)
#nrow(df)
#nrow(df[df$year==2019,])
#nrow(df)
#df_small=df[sample(1:nrow(df),size = 10000,replace=F),]
#object_size(df)
#library(readr)
#library(data.table)
#library(pryr)
#library(dplyr)
#library(lubridate)
#https://www1.nyc.gov/site/tlc/about/tlc-trip-record-data.page
setwd("/Users/mavt/Dropbox/School/NYCDataScience/Projects/Shiny/taxis/")
getwd()
#file_in = "yellow_tripdata_2019-06.csv"
#file_out = "yellow_tripdata_2019-06_out.csv"
#df_locations <- fread("taxi+_zone_lookup.csv")
#df_locations$service_zone=NULL
#file_in = "yellow_tripdata_2019-05.csv"
#file_out = "yellow_tripdata_2019-05_out.csv"
#df06=df
file_in = "yellow_tripdata_2019-04.csv"
file_out = "yellow_tripdata_2019-04_out.csv"
df05=df
#file_in = "yellow_tripdata_2019-03.csv"
#file_out = "yellow_tripdata_2019-03_out.csv"
#df04=df
#file_in = "yellow_tripdata_2019-02.csv"
#file_out = "yellow_tripdata_2019-02_out.csv"
#df03=df
#file_in = "yellow_tripdata_2019-01.csv"
#file_out = "yellow_tripdata_2019-01_out.csv"
#df02=df
#df01=df
df <- read_csv(file_in,
col_types = cols(RatecodeID = col_skip(),
VendorID = col_skip(),
store_and_fwd_flag = col_skip(),
congestion_surcharge = col_skip(),
tpep_dropoff_datetime = col_datetime(format = "%Y-%m-%d %H:%M:%S"),
tpep_pickup_datetime = col_datetime(format = "%Y-%m-%d %H:%M:%S")))
df %>% filter(payment_type==1 | payment_type==2 )  -> df
#object_size(df)
df$year=year(df$tpep_pickup_datetime)
df$month=month(df$tpep_pickup_datetime)
df$wday=wday(df$tpep_pickup_datetime)
df$hr=hour(df$tpep_pickup_datetime)
df$duration=difftime(df$tpep_dropoff_datetime,df$tpep_pickup_datetime,units='mins')
df$duration=as.numeric(df$duration)
df$tpep_dropoff_datetime = NULL
df$tpep_pickup_datetime = NULL
df$trips=1
df=df[df$duration>0,]
df=df[df$trip_distance>0,]
df=df[df$duration<150,]
#df = df[df$year==2019,]
#nrow(df)
#df = df[df$month<7,]
#nrow(df)
df = df[df$fare_amount>0,]
nrow(df)
df$range_hrs = ifelse(df$hr>=0 & df$hr<4,'00-04',ifelse(df$hr>=4 & df$hr<8,'04-08',ifelse(df$hr>=8 & df$hr<12,'08-12',ifelse(df$hr>=12 & df$hr<16,'12-16',ifelse(df$hr>=16 & df$hr<20,'16-20','20-24')))))
df$passenger_count=ifelse(df$passenger_count==0,1,df$passenger_count)
df$hr=NULL
df %>%
dplyr::rename(LocationID=PULocationID) %>%
left_join(df_locations,by = "LocationID") %>%
dplyr::rename(O_borough=Borough,O_Zone=Zone) %>%
select(-LocationID) %>%
dplyr::rename(LocationID=DOLocationID) %>%
left_join(df_locations,by = "LocationID") %>%
dplyr::rename(D_borough=Borough,D_Zone=Zone) %>%
select(-LocationID) -> df
#fwrite(df,file_out)
df %>% group_by(year,month,O_borough,O_Zone,D_borough,D_Zone,payment_type,wday,range_hrs) %>%
summarize(passengers=sum(passenger_count),distance=sum(trip_distance),amount_fare=sum(fare_amount),amount_extra=sum(extra),amount_mta=sum(mta_tax),amount_tip=sum(tip_amount),amount_tolls=sum(tolls_amount),amount_improvement=sum(improvement_surcharge),amount_total=sum(total_amount),duration=sum(duration),trips=sum(trips)) -> df
#df=rbind(df01,df02,df03,df04,df05,df06)
#fwrite(df,"trips_2019_01_to_06.csv")
#unique(df$month)
#nrow(df)
#nrow(df[df$year==2019,])
#nrow(df)
#df_small=df[sample(1:nrow(df),size = 10000,replace=F),]
#object_size(df)
#library(readr)
#library(data.table)
#library(pryr)
#library(dplyr)
#library(lubridate)
#https://www1.nyc.gov/site/tlc/about/tlc-trip-record-data.page
setwd("/Users/mavt/Dropbox/School/NYCDataScience/Projects/Shiny/taxis/")
getwd()
#file_in = "yellow_tripdata_2019-06.csv"
#file_out = "yellow_tripdata_2019-06_out.csv"
#df_locations <- fread("taxi+_zone_lookup.csv")
#df_locations$service_zone=NULL
#file_in = "yellow_tripdata_2019-05.csv"
#file_out = "yellow_tripdata_2019-05_out.csv"
#df06=df
#file_in = "yellow_tripdata_2019-04.csv"
#file_out = "yellow_tripdata_2019-04_out.csv"
#df05=df
file_in = "yellow_tripdata_2019-03.csv"
file_out = "yellow_tripdata_2019-03_out.csv"
df04=df
#file_in = "yellow_tripdata_2019-02.csv"
#file_out = "yellow_tripdata_2019-02_out.csv"
#df03=df
#file_in = "yellow_tripdata_2019-01.csv"
#file_out = "yellow_tripdata_2019-01_out.csv"
#df02=df
#df01=df
df <- read_csv(file_in,
col_types = cols(RatecodeID = col_skip(),
VendorID = col_skip(),
store_and_fwd_flag = col_skip(),
congestion_surcharge = col_skip(),
tpep_dropoff_datetime = col_datetime(format = "%Y-%m-%d %H:%M:%S"),
tpep_pickup_datetime = col_datetime(format = "%Y-%m-%d %H:%M:%S")))
df %>% filter(payment_type==1 | payment_type==2 )  -> df
#object_size(df)
df$year=year(df$tpep_pickup_datetime)
df$month=month(df$tpep_pickup_datetime)
df$wday=wday(df$tpep_pickup_datetime)
df$hr=hour(df$tpep_pickup_datetime)
df$duration=difftime(df$tpep_dropoff_datetime,df$tpep_pickup_datetime,units='mins')
df$duration=as.numeric(df$duration)
df$tpep_dropoff_datetime = NULL
df$tpep_pickup_datetime = NULL
df$trips=1
df=df[df$duration>0,]
df=df[df$trip_distance>0,]
df=df[df$duration<150,]
#df = df[df$year==2019,]
#nrow(df)
#df = df[df$month<7,]
#nrow(df)
df = df[df$fare_amount>0,]
nrow(df)
df$range_hrs = ifelse(df$hr>=0 & df$hr<4,'00-04',ifelse(df$hr>=4 & df$hr<8,'04-08',ifelse(df$hr>=8 & df$hr<12,'08-12',ifelse(df$hr>=12 & df$hr<16,'12-16',ifelse(df$hr>=16 & df$hr<20,'16-20','20-24')))))
df$passenger_count=ifelse(df$passenger_count==0,1,df$passenger_count)
df$hr=NULL
df %>%
dplyr::rename(LocationID=PULocationID) %>%
left_join(df_locations,by = "LocationID") %>%
dplyr::rename(O_borough=Borough,O_Zone=Zone) %>%
select(-LocationID) %>%
dplyr::rename(LocationID=DOLocationID) %>%
left_join(df_locations,by = "LocationID") %>%
dplyr::rename(D_borough=Borough,D_Zone=Zone) %>%
select(-LocationID) -> df
#fwrite(df,file_out)
df %>% group_by(year,month,O_borough,O_Zone,D_borough,D_Zone,payment_type,wday,range_hrs) %>%
summarize(passengers=sum(passenger_count),distance=sum(trip_distance),amount_fare=sum(fare_amount),amount_extra=sum(extra),amount_mta=sum(mta_tax),amount_tip=sum(tip_amount),amount_tolls=sum(tolls_amount),amount_improvement=sum(improvement_surcharge),amount_total=sum(total_amount),duration=sum(duration),trips=sum(trips)) -> df
#df=rbind(df01,df02,df03,df04,df05,df06)
#fwrite(df,"trips_2019_01_to_06.csv")
#unique(df$month)
#nrow(df)
#nrow(df[df$year==2019,])
#nrow(df)
#df_small=df[sample(1:nrow(df),size = 10000,replace=F),]
#object_size(df)
#library(readr)
#library(data.table)
#library(pryr)
#library(dplyr)
#library(lubridate)
#https://www1.nyc.gov/site/tlc/about/tlc-trip-record-data.page
setwd("/Users/mavt/Dropbox/School/NYCDataScience/Projects/Shiny/taxis/")
getwd()
#file_in = "yellow_tripdata_2019-06.csv"
#file_out = "yellow_tripdata_2019-06_out.csv"
#df_locations <- fread("taxi+_zone_lookup.csv")
#df_locations$service_zone=NULL
#file_in = "yellow_tripdata_2019-05.csv"
#file_out = "yellow_tripdata_2019-05_out.csv"
#df06=df
#file_in = "yellow_tripdata_2019-04.csv"
#file_out = "yellow_tripdata_2019-04_out.csv"
#df05=df
#file_in = "yellow_tripdata_2019-03.csv"
#file_out = "yellow_tripdata_2019-03_out.csv"
#df04=df
file_in = "yellow_tripdata_2019-02.csv"
file_out = "yellow_tripdata_2019-02_out.csv"
df03=df
#file_in = "yellow_tripdata_2019-01.csv"
#file_out = "yellow_tripdata_2019-01_out.csv"
#df02=df
#df01=df
df <- read_csv(file_in,
col_types = cols(RatecodeID = col_skip(),
VendorID = col_skip(),
store_and_fwd_flag = col_skip(),
congestion_surcharge = col_skip(),
tpep_dropoff_datetime = col_datetime(format = "%Y-%m-%d %H:%M:%S"),
tpep_pickup_datetime = col_datetime(format = "%Y-%m-%d %H:%M:%S")))
df %>% filter(payment_type==1 | payment_type==2 )  -> df
#object_size(df)
df$year=year(df$tpep_pickup_datetime)
df$month=month(df$tpep_pickup_datetime)
df$wday=wday(df$tpep_pickup_datetime)
df$hr=hour(df$tpep_pickup_datetime)
df$duration=difftime(df$tpep_dropoff_datetime,df$tpep_pickup_datetime,units='mins')
df$duration=as.numeric(df$duration)
df$tpep_dropoff_datetime = NULL
df$tpep_pickup_datetime = NULL
df$trips=1
df=df[df$duration>0,]
df=df[df$trip_distance>0,]
df=df[df$duration<150,]
#df = df[df$year==2019,]
#nrow(df)
#df = df[df$month<7,]
#nrow(df)
df = df[df$fare_amount>0,]
nrow(df)
df$range_hrs = ifelse(df$hr>=0 & df$hr<4,'00-04',ifelse(df$hr>=4 & df$hr<8,'04-08',ifelse(df$hr>=8 & df$hr<12,'08-12',ifelse(df$hr>=12 & df$hr<16,'12-16',ifelse(df$hr>=16 & df$hr<20,'16-20','20-24')))))
df$passenger_count=ifelse(df$passenger_count==0,1,df$passenger_count)
df$hr=NULL
df %>%
dplyr::rename(LocationID=PULocationID) %>%
left_join(df_locations,by = "LocationID") %>%
dplyr::rename(O_borough=Borough,O_Zone=Zone) %>%
select(-LocationID) %>%
dplyr::rename(LocationID=DOLocationID) %>%
left_join(df_locations,by = "LocationID") %>%
dplyr::rename(D_borough=Borough,D_Zone=Zone) %>%
select(-LocationID) -> df
#fwrite(df,file_out)
df %>% group_by(year,month,O_borough,O_Zone,D_borough,D_Zone,payment_type,wday,range_hrs) %>%
summarize(passengers=sum(passenger_count),distance=sum(trip_distance),amount_fare=sum(fare_amount),amount_extra=sum(extra),amount_mta=sum(mta_tax),amount_tip=sum(tip_amount),amount_tolls=sum(tolls_amount),amount_improvement=sum(improvement_surcharge),amount_total=sum(total_amount),duration=sum(duration),trips=sum(trips)) -> df
#df=rbind(df01,df02,df03,df04,df05,df06)
#fwrite(df,"trips_2019_01_to_06.csv")
#unique(df$month)
#nrow(df)
#nrow(df[df$year==2019,])
#nrow(df)
#df_small=df[sample(1:nrow(df),size = 10000,replace=F),]
#object_size(df)
#library(readr)
#library(data.table)
#library(pryr)
#library(dplyr)
#library(lubridate)
#https://www1.nyc.gov/site/tlc/about/tlc-trip-record-data.page
setwd("/Users/mavt/Dropbox/School/NYCDataScience/Projects/Shiny/taxis/")
getwd()
#file_in = "yellow_tripdata_2019-06.csv"
#file_out = "yellow_tripdata_2019-06_out.csv"
#df_locations <- fread("taxi+_zone_lookup.csv")
#df_locations$service_zone=NULL
#file_in = "yellow_tripdata_2019-05.csv"
#file_out = "yellow_tripdata_2019-05_out.csv"
#df06=df
#file_in = "yellow_tripdata_2019-04.csv"
#file_out = "yellow_tripdata_2019-04_out.csv"
#df05=df
#file_in = "yellow_tripdata_2019-03.csv"
#file_out = "yellow_tripdata_2019-03_out.csv"
#df04=df
#file_in = "yellow_tripdata_2019-02.csv"
#file_out = "yellow_tripdata_2019-02_out.csv"
#df03=df
file_in = "yellow_tripdata_2019-01.csv"
file_out = "yellow_tripdata_2019-01_out.csv"
df02=df
#df01=df
df <- read_csv(file_in,
col_types = cols(RatecodeID = col_skip(),
VendorID = col_skip(),
store_and_fwd_flag = col_skip(),
congestion_surcharge = col_skip(),
tpep_dropoff_datetime = col_datetime(format = "%Y-%m-%d %H:%M:%S"),
tpep_pickup_datetime = col_datetime(format = "%Y-%m-%d %H:%M:%S")))
df %>% filter(payment_type==1 | payment_type==2 )  -> df
#object_size(df)
df$year=year(df$tpep_pickup_datetime)
df$month=month(df$tpep_pickup_datetime)
df$wday=wday(df$tpep_pickup_datetime)
df$hr=hour(df$tpep_pickup_datetime)
df$duration=difftime(df$tpep_dropoff_datetime,df$tpep_pickup_datetime,units='mins')
df$duration=as.numeric(df$duration)
df$tpep_dropoff_datetime = NULL
df$tpep_pickup_datetime = NULL
df$trips=1
df=df[df$duration>0,]
df=df[df$trip_distance>0,]
df=df[df$duration<150,]
#df = df[df$year==2019,]
#nrow(df)
#df = df[df$month<7,]
#nrow(df)
df = df[df$fare_amount>0,]
nrow(df)
df$range_hrs = ifelse(df$hr>=0 & df$hr<4,'00-04',ifelse(df$hr>=4 & df$hr<8,'04-08',ifelse(df$hr>=8 & df$hr<12,'08-12',ifelse(df$hr>=12 & df$hr<16,'12-16',ifelse(df$hr>=16 & df$hr<20,'16-20','20-24')))))
df$passenger_count=ifelse(df$passenger_count==0,1,df$passenger_count)
df$hr=NULL
df %>%
dplyr::rename(LocationID=PULocationID) %>%
left_join(df_locations,by = "LocationID") %>%
dplyr::rename(O_borough=Borough,O_Zone=Zone) %>%
select(-LocationID) %>%
dplyr::rename(LocationID=DOLocationID) %>%
left_join(df_locations,by = "LocationID") %>%
dplyr::rename(D_borough=Borough,D_Zone=Zone) %>%
select(-LocationID) -> df
#fwrite(df,file_out)
df %>% group_by(year,month,O_borough,O_Zone,D_borough,D_Zone,payment_type,wday,range_hrs) %>%
summarize(passengers=sum(passenger_count),distance=sum(trip_distance),amount_fare=sum(fare_amount),amount_extra=sum(extra),amount_mta=sum(mta_tax),amount_tip=sum(tip_amount),amount_tolls=sum(tolls_amount),amount_improvement=sum(improvement_surcharge),amount_total=sum(total_amount),duration=sum(duration),trips=sum(trips)) -> df
#df=rbind(df01,df02,df03,df04,df05,df06)
#fwrite(df,"trips_2019_01_to_06.csv")
#unique(df$month)
#nrow(df)
#nrow(df[df$year==2019,])
#nrow(df)
#df_small=df[sample(1:nrow(df),size = 10000,replace=F),]
#object_size(df)
df01=df
df=rbind(df01,df02,df03,df04,df05,df06)
fwrite(df,"trips_2019_01_to_06.csv")
setwd("/Users/mavt/Dropbox/School/NYCDataScience/Projects/Shiny/taxis/")
getwd()
#df <- fread("trips_2019_01_to_06.csv")
multiplier=365/181
df <- read_csv("trips_2019_01_to_06.csv",
col_types = cols(year = col_skip(),
month = col_skip(),
payment_type= col_skip()))
df %>%
group_by(O_borough,O_Zone,D_borough,D_Zone) %>%
summarize(passengers=sum(passengers),distance=sum(distance),amount_fare=sum(amount_fare),amount_extra=sum(amount_extra),amount_mta=sum(amount_mta),amount_tip=sum(amount_tip),amount_tolls=sum(amount_tolls),amount_improvement=sum(amount_improvement),amount_total=sum(amount_total),duration=sum(duration),trips=sum(trips)) ->
df_total
df_total %>% mutate(passengers=(passengers*multiplier),distance=(distance*multiplier),amount_fare=(amount_fare*multiplier),amount_extra=(amount_extra*multiplier),amount_mta=(amount_mta*multiplier),amount_tip=(amount_tip*multiplier),amount_tolls=(amount_tolls*multiplier),amount_improvement=(amount_improvement*multiplier),amount_total=(amount_total*multiplier),duration=(duration*multiplier),trips=(trips*multiplier)) ->
df_total
object_size(df_total)
#Mon	25  51
#Tue	26  52
#Wed	26  52
#Thu	26  52
#Fri	26  52
#Sat	26  52
#Sun	26  51
#==============================================================================
#FILE PROCESSING ####
df_small = df[sample(1:nrow(df),size = 10000,replace=F),]
#General Dataframe
df %>%
group_by(O_borough,O_Zone,D_borough,D_Zone,wday,range_hrs) %>%
summarize(passengers=sum(passengers),distance=sum(distance),amount_fare=sum(amount_fare),amount_extra=sum(amount_extra),amount_mta=sum(amount_mta),amount_tip=sum(amount_tip),amount_tolls=sum(amount_tolls),amount_improvement=sum(amount_improvement),amount_total=sum(amount_total),duration=sum(duration),trips=sum(trips)) ->
df
#%>% mutate(elapsed_days=ifelse(wday==1,25,26)) -> df
#Daily Dataframe
df %>% mutate(passengers=(passengers*multiplier),distance=(distance*multiplier),amount_fare=(amount_fare*multiplier),amount_extra=(amount_extra*multiplier),amount_mta=(amount_mta*multiplier),amount_tip=(amount_tip*multiplier),amount_tolls=(amount_tolls*multiplier),amount_improvement=(amount_improvement*multiplier),amount_total=(amount_total*multiplier),duration=(duration*multiplier),trips=(trips*multiplier)) ->
df_summary
#nrow(df_daily)
#object_size(df_daily)
df_summary %>%
#    filter(O_Zone=='Upper West Side South',D_Zone=='JFK Airport') %>%
group_by(wday,range_hrs) %>%
summarize(passengers=sum(passengers),distance=sum(distance),amount_fare=sum(amount_fare),amount_extra=sum(amount_extra),amount_mta=sum(amount_mta),amount_tip=sum(amount_tip),amount_tolls=sum(amount_tolls),amount_improvement=sum(amount_improvement),amount_total=sum(amount_total),duration=sum(duration),trips=sum(trips)) ->
df_overview
#object_size(df_daily_overview)
#nrow(df_daily_overview)
fwrite(df_overview,"df_overview.csv")
setwd("/Users/mavt/Dropbox/School/NYCDataScience/Projects/Shiny/taxis/")
getwd()
#df <- fread("trips_2019_01_to_06.csv")
multiplier=365/181
multiplier=1/181
df <- read_csv("trips_2019_01_to_06.csv",
col_types = cols(year = col_skip(),
month = col_skip(),
payment_type= col_skip()))
df %>%
group_by(O_borough,O_Zone,D_borough,D_Zone) %>%
summarize(passengers=sum(passengers),distance=sum(distance),amount_fare=sum(amount_fare),amount_extra=sum(amount_extra),amount_mta=sum(amount_mta),amount_tip=sum(amount_tip),amount_tolls=sum(amount_tolls),amount_improvement=sum(amount_improvement),amount_total=sum(amount_total),duration=sum(duration),trips=sum(trips)) %>%
mutate(passengers=(passengers*multiplier),distance=(distance*multiplier),amount_fare=(amount_fare*multiplier),amount_extra=(amount_extra*multiplier),amount_mta=(amount_mta*multiplier),amount_tip=(amount_tip*multiplier),amount_tolls=(amount_tolls*multiplier),amount_improvement=(amount_improvement*multiplier),amount_total=(amount_total*multiplier),duration=(duration*multiplier),trips=(trips*multiplier)) %>%
mutate(passengers=(passengers/trips),distance=(distance/trips),amount_fare=(amount_fare/trips),amount_extra=(amount_extra/trips),amount_mta=(amount_mta/trips),amount_tip=(amount_tip/trips),amount_tolls=(amount_tolls/trips),amount_improvement=(amount_improvement/trips),amount_total=(amount_total/trips),duration=(duration/trips)) %>%
filter(O_borough!="Unknown" & D_borough!="Unknown" & O_Zone!="NV" & D_Zone!="NV") %>%
rename('From Borough'=O_borough,Zone=O_Zone,'To Borough'=D_borough,"To Zone"=D_Zone,"Daily Passengers"=passengers,Distance=distance,Fare=amount_fare,Extra=amount_extra,MTA=amount_mta,Tip=amount_tip,Tolls=amount_tolls,Improv.=amount_improvement,Total=amount_total,"Avg.Mins"=duration,Trips=trips) %>%
select(-"Daily Passengers") %>%
arrange(-Trips) ->
df_data
object_size(df_data)
fwrite(df_data,"df_data.csv")
runApp()
